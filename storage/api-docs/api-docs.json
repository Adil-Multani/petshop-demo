{
    "openapi": "3.0.0",
    "info": {
        "title": "Pet Shop API",
        "description": "API documentation for the Pet Shop application.",
        "version": "1.0"
    },
    "paths": {
        "/api/v1/admin/user-listing": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "User Listing (Admin)",
                "operationId": "adminUserListing",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (default: 1)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page (default: 10)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Column to sort by (default: created_at)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "last_login_at",
                                "first_name",
                                "is_marketing",
                                "email"
                            ]
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Sort in descending order (default: false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_marketing",
                        "in": "query",
                        "description": "Filter by marketing status (default: false)",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Login",
                "operationId": "adminLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/admin/logout": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Logout",
                "operationId": "adminLogout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/create": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create User (Admin)",
                "operationId": "adminCreateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "address",
                                    "phone_number"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@yopmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "141414141414141"
                                    },
                                    "is_marketing": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "avatar": {
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/user-edit/{uuid}": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Edit User (Admin)",
                "operationId": "adminEditUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the user to edit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@yopmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "141414141414141"
                                    },
                                    "avatar": {
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User account edited successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/user-delete/{uuid}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete User (Admin)",
                "operationId": "adminDeleteUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User account deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}